public class Solution {
    private static int[] twos = {
        1,
        2,
        2*2,
        2*2*2,
        2*2*2*2,
        2*2*2*2*2,
        2*2*2*2*2*2,
        2*2*2*2*2*2*2,
        2*2*2*2*2*2*2*2,
        2*2*2*2*2*2*2*2*2,
        2*2*2*2*2*2*2*2*2*2,
        2*2*2*2*2*2*2*2*2*2*2,
        2*2*2*2*2*2*2*2*2*2*2*2,
        2*2*2*2*2*2*2*2*2*2*2*2*2,
        2*2*2*2*2*2*2*2*2*2*2*2*2*2,
        2*2*2*2*2*2*2*2*2*2*2*2*2*2*2,
        2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2,
        2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2,
        2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2,
        2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2,
        2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2*2
    };
    
    public int[] GetMaximumXor(int[] nums, int maximumBit) {
        int n = nums.Length;
        int[] ans = new int[n];
        int x = 0;
        
        for (int i = 0; i < n; i++) {
            x = (x ^ nums[i]);
            ans[n-1-i] = (~x) & (twos[maximumBit]-1);
        }
        
        return ans;
    }
}